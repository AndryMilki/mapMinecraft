{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439\\\\Work\\\\Map\\\\client\\\\src\\\\MapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport L from \"leaflet\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MapView() {\n  _s();\n  const mapRef = useRef(null);\n  const [config, setConfig] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const playersRef = useRef({}); // ключ: имя игрока, значение: {x, z, lastSeen}\n  const [ws, setWs] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [cursorCoords, setCursorCoords] = useState(null);\n  const [refreshCounter, setRefreshCounter] = useState(0);\n  const imgWidth = 1280;\n  const imgHeight = 634;\n  const TIMEOUT_MS = 10000; // 10 секунд без обновлений — удаляем игрока\n\n  const playerIcon = name => L.divIcon({\n    className: \"player-icon\",\n    html: `<div style=\"\n        background-image:url('https://mc-heads.net/avatar/${name}/32');\n        width:32px; height:32px;\n        border-radius:50%;\n        border: 2px solid white;\n        background-size: cover;\n      \"></div>`,\n    iconSize: [32, 32]\n  });\n  const clusterIcon = count => L.divIcon({\n    className: \"player-cluster-icon\",\n    html: `<div style=\"\n        background-color: rgba(0, 0, 0, 0.7);\n        color: white;\n        font-weight: bold;\n        border-radius: 50%;\n        width: 32px;\n        height: 32px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        border: 2px solid white;\n        font-size: 14px;\n        user-select: none;\n      \">\n        +${count}\n      </div>`,\n    iconSize: [32, 32]\n  });\n  function mcToImageCoords(x, z) {\n    if (!config) return [0, 0];\n    const minX = Math.min(config.top_left[0], config.bottom_right[0]);\n    const maxX = Math.max(config.top_left[0], config.bottom_right[0]);\n    const minZ = Math.min(config.top_left[1], config.bottom_right[1]);\n    const maxZ = Math.max(config.top_left[1], config.bottom_right[1]);\n    const normX = (x - minX) / (maxX - minX);\n    const normZ = (z - minZ) / (maxZ - minZ);\n    const px = normX * imgWidth;\n    const py = (1 - normZ) * imgHeight;\n    return [px, py];\n  }\n  function imageCoordsToMC(px, py) {\n    if (!config) return null;\n    const minX = Math.min(config.top_left[0], config.bottom_right[0]);\n    const maxX = Math.max(config.top_left[0], config.bottom_right[0]);\n    const minZ = Math.min(config.top_left[1], config.bottom_right[1]);\n    const maxZ = Math.max(config.top_left[1], config.bottom_right[1]);\n    const normX = px / imgWidth;\n    const normZ = 1 - py / imgHeight;\n    const x = minX + normX * (maxX - minX);\n    const z = minZ + normZ * (maxZ - minZ);\n    return {\n      x: x.toFixed(1),\n      z: z.toFixed(1)\n    };\n  }\n  useEffect(() => {\n    fetch(\"/map/config\").then(res => res.json()).then(setConfig).catch(console.error);\n  }, [refreshCounter]);\n  useEffect(() => {\n    if (!config) return;\n    if (mapRef.current) {\n      mapRef.current.off();\n      mapRef.current.remove();\n      mapRef.current = null;\n    }\n    const bounds = [[0, 0], [imgHeight, imgWidth]];\n    const map = L.map(\"map\", {\n      crs: L.CRS.Simple,\n      minZoom: -5,\n      maxZoom: 5,\n      zoomControl: true\n    });\n    const imageUrl = `/maps/map.png?v=${refreshCounter}`;\n    L.imageOverlay(imageUrl, bounds).addTo(map);\n    map.fitBounds(bounds);\n    mapRef.current = map;\n    setPlayers([]);\n    playersRef.current = {};\n    if (ws) {\n      ws.close();\n      setWs(null);\n    }\n    const socket = new WebSocket(`ws://${window.location.hostname}:8000/ws`);\n    socket.onopen = () => {\n      console.log(\"WebSocket connected\");\n    };\n    socket.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.type === \"player_position\" && data.name) {\n          // Обновляем данные в playersRef с таймстампом\n          playersRef.current[data.name] = {\n            x: data.x,\n            z: data.z,\n            lastSeen: Date.now()\n          };\n          // Обновляем состояние, чтобы перерисовать карту\n          setPlayers(Object.entries(playersRef.current).map(([name, pos]) => ({\n            name,\n            x: pos.x,\n            z: pos.z\n          })));\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    socket.onclose = () => {\n      console.log(\"WebSocket closed\");\n    };\n    map.on(\"mousemove\", e => {\n      if (!config) return;\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      const mcCoords = imageCoordsToMC(lng, lat);\n      if (mcCoords) {\n        setCursorCoords(mcCoords);\n      } else {\n        setCursorCoords(null);\n      }\n    });\n    setWs(socket);\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.off();\n        mapRef.current.remove();\n        mapRef.current = null;\n      }\n      socket.close();\n    };\n  }, [config, refreshCounter]);\n\n  // Эффект очистки устаревших игроков\n  useEffect(() => {\n    if (!players.length) return;\n    const interval = setInterval(() => {\n      const now = Date.now();\n      let changed = false;\n      Object.entries(playersRef.current).forEach(([name, pos]) => {\n        if (now - pos.lastSeen > TIMEOUT_MS) {\n          delete playersRef.current[name];\n          changed = true;\n        }\n      });\n      if (changed) {\n        setPlayers(Object.entries(playersRef.current).map(([name, pos]) => ({\n          name,\n          x: pos.x,\n          z: pos.z\n        })));\n      }\n    }, 2000); // Проверяем каждые 2 секунды\n\n    return () => clearInterval(interval);\n  }, [players]);\n  useEffect(() => {\n    if (!mapRef.current) return;\n\n    // Удаляем старые маркеры\n    mapRef.current.eachLayer(layer => {\n      if (layer instanceof L.Marker) {\n        mapRef.current.removeLayer(layer);\n      }\n    });\n\n    // Группируем игроков по координатам блока (округляем до целого)\n    const groupedPlayers = {};\n    players.forEach(({\n      name,\n      x,\n      z\n    }) => {\n      if (typeof x !== 'number' || typeof z !== 'number') return; // защита\n      const blockX = Math.floor(x);\n      const blockZ = Math.floor(z);\n      const key = `${blockX}_${blockZ}`;\n      if (!groupedPlayers[key]) groupedPlayers[key] = [];\n      groupedPlayers[key].push({\n        name,\n        x,\n        z\n      });\n    });\n    console.log(\"Grouped players:\", groupedPlayers);\n    Object.values(groupedPlayers).forEach(group => {\n      if (group.length === 1) {\n        // Один игрок — отображаем его иконку\n        const {\n          name,\n          x,\n          z\n        } = group[0];\n        const [px, py] = mcToImageCoords(x, z);\n        L.marker([py, px], {\n          icon: playerIcon(name)\n        }).addTo(mapRef.current).bindPopup(name);\n      } else {\n        // Несколько игроков — отображаем иконку с количеством\n        const {\n          x,\n          z\n        } = group[0];\n        const [px, py] = mcToImageCoords(x, z);\n        L.marker([py, px], {\n          icon: clusterIcon(group.length)\n        }).addTo(mapRef.current).bindPopup(`${group.length} игроков`);\n      }\n    });\n  }, [players, config]);\n  async function handleUpload(e) {\n    e.preventDefault();\n    setUploading(true);\n    const form = e.target;\n    const file = form.file.files[0];\n    const top_left_x = form.top_left_x.value;\n    const top_left_z = form.top_left_z.value;\n    const bottom_right_x = form.bottom_right_x.value;\n    const bottom_right_z = form.bottom_right_z.value;\n    if (!file || !top_left_x || !top_left_z || !bottom_right_x || !bottom_right_z) {\n      alert(\"Все поля должны быть заполнены\");\n      setUploading(false);\n      return;\n    }\n    const data = new FormData();\n    data.append(\"file\", file);\n    try {\n      let res = await fetch(\"/map/upload\", {\n        method: \"POST\",\n        body: data\n      });\n      let json = await res.json();\n      if (json.status !== \"ok\") throw new Error(\"Ошибка загрузки файла\");\n      res = await fetch(\"/map/set_bounds\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: new URLSearchParams({\n          top_left_x,\n          top_left_z,\n          bottom_right_x,\n          bottom_right_z\n        })\n      });\n      json = await res.json();\n      if (json.status !== \"ok\") throw new Error(\"Ошибка установки границ\");\n      alert(\"Карта обновлена!\");\n      setRefreshCounter(c => c + 1);\n    } catch (err) {\n      alert(\"Ошибка: \" + err.message);\n    }\n    setUploading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: \"70vh\",\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), cursorCoords && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      children: [\"\\u041A\\u043E\\u043E\\u0440\\u0434\\u0438\\u043D\\u0430\\u0442\\u044B Minecraft: X = \", cursorCoords.x, \", Z = \", cursorCoords.z]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      style: {\n        marginTop: 20,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u0443 \\u0438 \\u0443\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0433\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0412\\u0435\\u0440\\u0445\\u043D\\u0438\\u0439 \\u043B\\u0435\\u0432\\u044B\\u0439 X: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"top_left_x\",\n            step: \"0.1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0412\\u0435\\u0440\\u0445\\u043D\\u0438\\u0439 \\u043B\\u0435\\u0432\\u044B\\u0439 Z: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"top_left_z\",\n            step: \"0.1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041D\\u0438\\u0436\\u043D\\u0438\\u0439 \\u043F\\u0440\\u0430\\u0432\\u044B\\u0439 X: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"bottom_right_x\",\n            step: \"0.1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041D\\u0438\\u0436\\u043D\\u0438\\u0439 \\u043F\\u0440\\u0430\\u0432\\u044B\\u0439 Z: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"bottom_right_z\",\n            step: \"0.1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: uploading,\n        type: \"submit\",\n        children: uploading ? \"Загрузка...\" : \"Обновить карту\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MapView, \"BtfwYDlx4QKN3Oc4VQXecMcAQH0=\");\n_c = MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useState","useRef","L","jsxDEV","_jsxDEV","Fragment","_Fragment","MapView","_s","mapRef","config","setConfig","players","setPlayers","playersRef","ws","setWs","uploading","setUploading","cursorCoords","setCursorCoords","refreshCounter","setRefreshCounter","imgWidth","imgHeight","TIMEOUT_MS","playerIcon","name","divIcon","className","html","iconSize","clusterIcon","count","mcToImageCoords","x","z","minX","Math","min","top_left","bottom_right","maxX","max","minZ","maxZ","normX","normZ","px","py","imageCoordsToMC","toFixed","fetch","then","res","json","catch","console","error","current","off","remove","bounds","map","crs","CRS","Simple","minZoom","maxZoom","zoomControl","imageUrl","imageOverlay","addTo","fitBounds","close","socket","WebSocket","window","location","hostname","onopen","log","onmessage","event","data","JSON","parse","type","lastSeen","Date","now","Object","entries","pos","e","onclose","on","lat","lng","latlng","mcCoords","length","interval","setInterval","changed","forEach","clearInterval","eachLayer","layer","Marker","removeLayer","groupedPlayers","blockX","floor","blockZ","key","push","values","group","marker","icon","bindPopup","handleUpload","preventDefault","form","target","file","files","top_left_x","value","top_left_z","bottom_right_x","bottom_right_z","alert","FormData","append","method","body","status","Error","headers","URLSearchParams","c","err","message","children","id","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","onSubmit","padding","accept","step","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Андрей/Work/Map/client/src/MapView.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport L from \"leaflet\";\r\n\r\nexport default function MapView() {\r\n  const mapRef = useRef(null);\r\n  const [config, setConfig] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const playersRef = useRef({}); // ключ: имя игрока, значение: {x, z, lastSeen}\r\n  const [ws, setWs] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [cursorCoords, setCursorCoords] = useState(null);\r\n  const [refreshCounter, setRefreshCounter] = useState(0);\r\n\r\n  const imgWidth = 1280;\r\n  const imgHeight = 634;\r\n  const TIMEOUT_MS = 10000; // 10 секунд без обновлений — удаляем игрока\r\n\r\n  const playerIcon = (name) =>\r\n    L.divIcon({\r\n      className: \"player-icon\",\r\n      html: `<div style=\"\r\n        background-image:url('https://mc-heads.net/avatar/${name}/32');\r\n        width:32px; height:32px;\r\n        border-radius:50%;\r\n        border: 2px solid white;\r\n        background-size: cover;\r\n      \"></div>`,\r\n      iconSize: [32, 32],\r\n    });\r\n\r\n  const clusterIcon = (count) =>\r\n    L.divIcon({\r\n      className: \"player-cluster-icon\",\r\n      html: `<div style=\"\r\n        background-color: rgba(0, 0, 0, 0.7);\r\n        color: white;\r\n        font-weight: bold;\r\n        border-radius: 50%;\r\n        width: 32px;\r\n        height: 32px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        border: 2px solid white;\r\n        font-size: 14px;\r\n        user-select: none;\r\n      \">\r\n        +${count}\r\n      </div>`,\r\n      iconSize: [32, 32],\r\n    });\r\n\r\n  function mcToImageCoords(x, z) {\r\n    if (!config) return [0, 0];\r\n\r\n    const minX = Math.min(config.top_left[0], config.bottom_right[0]);\r\n    const maxX = Math.max(config.top_left[0], config.bottom_right[0]);\r\n    const minZ = Math.min(config.top_left[1], config.bottom_right[1]);\r\n    const maxZ = Math.max(config.top_left[1], config.bottom_right[1]);\r\n\r\n    const normX = (x - minX) / (maxX - minX);\r\n    const normZ = (z - minZ) / (maxZ - minZ);\r\n\r\n    const px = normX * imgWidth;\r\n    const py = (1 - normZ) * imgHeight;\r\n\r\n    return [px, py];\r\n  }\r\n\r\n  function imageCoordsToMC(px, py) {\r\n    if (!config) return null;\r\n\r\n    const minX = Math.min(config.top_left[0], config.bottom_right[0]);\r\n    const maxX = Math.max(config.top_left[0], config.bottom_right[0]);\r\n    const minZ = Math.min(config.top_left[1], config.bottom_right[1]);\r\n    const maxZ = Math.max(config.top_left[1], config.bottom_right[1]);\r\n\r\n    const normX = px / imgWidth;\r\n    const normZ = 1 - py / imgHeight;\r\n\r\n    const x = minX + normX * (maxX - minX);\r\n    const z = minZ + normZ * (maxZ - minZ);\r\n\r\n    return { x: x.toFixed(1), z: z.toFixed(1) };\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(\"/map/config\")\r\n      .then((res) => res.json())\r\n      .then(setConfig)\r\n      .catch(console.error);\r\n  }, [refreshCounter]);\r\n\r\n  useEffect(() => {\r\n    if (!config) return;\r\n\r\n    if (mapRef.current) {\r\n      mapRef.current.off();\r\n      mapRef.current.remove();\r\n      mapRef.current = null;\r\n    }\r\n\r\n    const bounds = [\r\n      [0, 0],\r\n      [imgHeight, imgWidth],\r\n    ];\r\n\r\n    const map = L.map(\"map\", {\r\n      crs: L.CRS.Simple,\r\n      minZoom: -5,\r\n      maxZoom: 5,\r\n      zoomControl: true,\r\n    });\r\n\r\n    const imageUrl = `/maps/map.png?v=${refreshCounter}`;\r\n\r\n    L.imageOverlay(imageUrl, bounds).addTo(map);\r\n    map.fitBounds(bounds);\r\n\r\n    mapRef.current = map;\r\n\r\n    setPlayers([]);\r\n    playersRef.current = {};\r\n    if (ws) {\r\n      ws.close();\r\n      setWs(null);\r\n    }\r\n\r\n    const socket = new WebSocket(`ws://${window.location.hostname}:8000/ws`);\r\n\r\n    socket.onopen = () => {\r\n      console.log(\"WebSocket connected\");\r\n    };\r\n\r\n    socket.onmessage = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        if (data.type === \"player_position\" && data.name) {\r\n          // Обновляем данные в playersRef с таймстампом\r\n          playersRef.current[data.name] = {\r\n            x: data.x,\r\n            z: data.z,\r\n            lastSeen: Date.now(),\r\n          };\r\n          // Обновляем состояние, чтобы перерисовать карту\r\n          setPlayers(Object.entries(playersRef.current).map(([name, pos]) => ({\r\n            name,\r\n            x: pos.x,\r\n            z: pos.z,\r\n          })));\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    };\r\n\r\n    socket.onclose = () => {\r\n      console.log(\"WebSocket closed\");\r\n    };\r\n\r\n    map.on(\"mousemove\", (e) => {\r\n      if (!config) return;\r\n      const { lat, lng } = e.latlng;\r\n      const mcCoords = imageCoordsToMC(lng, lat);\r\n      if (mcCoords) {\r\n        setCursorCoords(mcCoords);\r\n      } else {\r\n        setCursorCoords(null);\r\n      }\r\n    });\r\n\r\n    setWs(socket);\r\n\r\n    return () => {\r\n      if (mapRef.current) {\r\n        mapRef.current.off();\r\n        mapRef.current.remove();\r\n        mapRef.current = null;\r\n      }\r\n      socket.close();\r\n    };\r\n  }, [config, refreshCounter]);\r\n\r\n  // Эффект очистки устаревших игроков\r\n  useEffect(() => {\r\n    if (!players.length) return;\r\n\r\n    const interval = setInterval(() => {\r\n      const now = Date.now();\r\n      let changed = false;\r\n      Object.entries(playersRef.current).forEach(([name, pos]) => {\r\n        if (now - pos.lastSeen > TIMEOUT_MS) {\r\n          delete playersRef.current[name];\r\n          changed = true;\r\n        }\r\n      });\r\n      if (changed) {\r\n        setPlayers(Object.entries(playersRef.current).map(([name, pos]) => ({\r\n          name,\r\n          x: pos.x,\r\n          z: pos.z,\r\n        })));\r\n      }\r\n    }, 2000); // Проверяем каждые 2 секунды\r\n\r\n    return () => clearInterval(interval);\r\n  }, [players]);\r\n\r\nuseEffect(() => {\r\n  if (!mapRef.current) return;\r\n\r\n  // Удаляем старые маркеры\r\n  mapRef.current.eachLayer((layer) => {\r\n    if (layer instanceof L.Marker) {\r\n      mapRef.current.removeLayer(layer);\r\n    }\r\n  });\r\n\r\n  // Группируем игроков по координатам блока (округляем до целого)\r\n  const groupedPlayers = {};\r\n  players.forEach(({ name, x, z }) => {\r\n    if (typeof x !== 'number' || typeof z !== 'number') return; // защита\r\n    const blockX = Math.floor(x);\r\n    const blockZ = Math.floor(z);\r\n    const key = `${blockX}_${blockZ}`;\r\n    if (!groupedPlayers[key]) groupedPlayers[key] = [];\r\n    groupedPlayers[key].push({ name, x, z });\r\n  });\r\n\r\n  console.log(\"Grouped players:\", groupedPlayers);\r\n\r\n  Object.values(groupedPlayers).forEach((group) => {\r\n    if (group.length === 1) {\r\n      // Один игрок — отображаем его иконку\r\n      const { name, x, z } = group[0];\r\n      const [px, py] = mcToImageCoords(x, z);\r\n      L.marker([py, px], { icon: playerIcon(name) })\r\n        .addTo(mapRef.current)\r\n        .bindPopup(name);\r\n    } else {\r\n      // Несколько игроков — отображаем иконку с количеством\r\n      const { x, z } = group[0];\r\n      const [px, py] = mcToImageCoords(x, z);\r\n      L.marker([py, px], { icon: clusterIcon(group.length) })\r\n        .addTo(mapRef.current)\r\n        .bindPopup(`${group.length} игроков`);\r\n    }\r\n  });\r\n}, [players, config]);\r\n\r\n  async function handleUpload(e) {\r\n    e.preventDefault();\r\n    setUploading(true);\r\n\r\n    const form = e.target;\r\n    const file = form.file.files[0];\r\n    const top_left_x = form.top_left_x.value;\r\n    const top_left_z = form.top_left_z.value;\r\n    const bottom_right_x = form.bottom_right_x.value;\r\n    const bottom_right_z = form.bottom_right_z.value;\r\n\r\n    if (!file || !top_left_x || !top_left_z || !bottom_right_x || !bottom_right_z) {\r\n      alert(\"Все поля должны быть заполнены\");\r\n      setUploading(false);\r\n      return;\r\n    }\r\n\r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n\r\n    try {\r\n      let res = await fetch(\"/map/upload\", {\r\n        method: \"POST\",\r\n        body: data,\r\n      });\r\n      let json = await res.json();\r\n      if (json.status !== \"ok\") throw new Error(\"Ошибка загрузки файла\");\r\n\r\n      res = await fetch(\"/map/set_bounds\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n        body: new URLSearchParams({\r\n          top_left_x,\r\n          top_left_z,\r\n          bottom_right_x,\r\n          bottom_right_z,\r\n        }),\r\n      });\r\n      json = await res.json();\r\n      if (json.status !== \"ok\") throw new Error(\"Ошибка установки границ\");\r\n\r\n      alert(\"Карта обновлена!\");\r\n      setRefreshCounter((c) => c + 1);\r\n    } catch (err) {\r\n      alert(\"Ошибка: \" + err.message);\r\n    }\r\n\r\n    setUploading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"map\" style={{ height: \"70vh\", width: \"100%\" }}></div>\r\n\r\n      {cursorCoords && (\r\n        <div style={{ marginTop: 10 }}>\r\n          Координаты Minecraft: X = {cursorCoords.x}, Z = {cursorCoords.z}\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleUpload} style={{ marginTop: 20, padding: 10 }}>\r\n        <h3>Загрузить карту и установить границы</h3>\r\n        <div>\r\n          <input type=\"file\" name=\"file\" accept=\"image/*\" />\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Верхний левый X: <input type=\"number\" name=\"top_left_x\" step=\"0.1\" />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Верхний левый Z: <input type=\"number\" name=\"top_left_z\" step=\"0.1\" />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Нижний правый X: <input type=\"number\" name=\"bottom_right_x\" step=\"0.1\" />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Нижний правый Z: <input type=\"number\" name=\"bottom_right_z\" step=\"0.1\" />\r\n          </label>\r\n        </div>\r\n        <button disabled={uploading} type=\"submit\">\r\n          {uploading ? \"Загрузка...\" : \"Обновить карту\"}\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}