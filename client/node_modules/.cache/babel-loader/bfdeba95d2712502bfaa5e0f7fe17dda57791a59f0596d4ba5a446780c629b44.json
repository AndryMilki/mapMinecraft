{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439\\\\Work\\\\Map\\\\client\\\\src\\\\MapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport L from \"leaflet\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DISTANCE_THRESHOLD = 5;\nfunction distance2D(x1, z1, x2, z2) {\n  const dx = x1 - x2;\n  const dz = z1 - z2;\n  return Math.sqrt(dx * dx + dz * dz);\n}\nfunction groupNearbyPlayers(players) {\n  const clusters = [];\n  const visited = new Set();\n  players.forEach((player, i) => {\n    if (visited.has(i)) return;\n    const cluster = [player];\n    visited.add(i);\n    players.forEach((other, j) => {\n      if (i === j || visited.has(j)) return;\n      if (distance2D(player.x, player.z, other.x, other.z) <= DISTANCE_THRESHOLD) {\n        cluster.push(other);\n        visited.add(j);\n      }\n    });\n    clusters.push(cluster);\n  });\n  return clusters;\n}\nexport default function MapView() {\n  _s();\n  const mapRef = useRef(null);\n  const [config, setConfig] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const playersRef = useRef({});\n  const [buildings, setBuildings] = useState({});\n  const buildingsRef = useRef({});\n  const [ws, setWs] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [cursorCoords, setCursorCoords] = useState(null);\n  const [refreshCounter, setRefreshCounter] = useState(0);\n  const imgWidth = 1280;\n  const imgHeight = 634;\n  const PLAYER_TIMEOUT_MS = 10000;\n  const BUILDING_REMOVE_TIMEOUT_MS = 3 * 60 * 1000;\n  const playerIcon = name => L.divIcon({\n    className: \"player-icon\",\n    html: `<div style=\"\n        background-image:url('https://mc-heads.net/avatar/${name}/32');\n        width:32px; height:32px;\n        border-radius:50%;\n        border: 2px solid white;\n        background-size: cover;\n      \"></div>`,\n    iconSize: [32, 32]\n  });\n  const clusterIcon = count => L.divIcon({\n    className: \"player-cluster-icon\",\n    html: `<div style=\"\n        background-color: rgba(0, 0, 0, 0.7);\n        color: white;\n        font-weight: bold;\n        border-radius: 50%;\n        width: 32px;\n        height: 32px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        border: 2px solid white;\n        font-size: 14px;\n        user-select: none;\n      \">\n        +${count}\n      </div>`,\n    iconSize: [32, 32]\n  });\n  const buildingIcons = {\n    \"Башня лучников\": \"archerIcon.png\",\n    \"Башня пушкарей\": \"https://i.imgur.com/XTkn2Lu.png\",\n    \"Башня тесла\": \"https://i.imgur.com/YW5my0J.png\",\n    \"Корабль лучников\": \"https://i.imgur.com/hTqWxou.png\",\n    \"Корабль пушкарей\": \"https://i.imgur.com/ihvV1vJ.png\",\n    \"Корабль тесла\": \"https://i.imgur.com/Ev3VfhS.png\"\n  };\n  function buildingIcon(buildingType, percent) {\n    let borderColor = \"black\";\n    if (percent >= 60) borderColor = \"green\";else if (percent >= 20) borderColor = \"red\";\n    return L.divIcon({\n      className: \"building-icon\",\n      html: `<div style=\"\n        background-image: url('${buildingIcons[buildingType] || buildingIcons['Башня лучников']}');\n        width: 12px;\n        height: 12px;\n        background-size: contain;\n        background-repeat: no-repeat;\n        border: 3px solid ${borderColor};\n        border-radius: 6px;\n        box-sizing: border-box;\n      \"></div>`,\n      iconSize: [12, 12],\n      iconAnchor: [6, 6]\n    });\n  }\n  function mcToImageCoords(x, z) {\n    if (!config) return [0, 0];\n    const minX = Math.min(config.top_left[0], config.bottom_right[0]);\n    const maxX = Math.max(config.top_left[0], config.bottom_right[0]);\n    const minZ = Math.min(config.top_left[1], config.bottom_right[1]);\n    const maxZ = Math.max(config.top_left[1], config.bottom_right[1]);\n    const normX = (x - minX) / (maxX - minX);\n    const normZ = (z - minZ) / (maxZ - minZ);\n    const px = normX * imgWidth;\n    const py = (1 - normZ) * imgHeight;\n    return [px, py];\n  }\n  function imageCoordsToMC(px, py) {\n    if (!config) return null;\n    const minX = Math.min(config.top_left[0], config.bottom_right[0]);\n    const maxX = Math.max(config.top_left[0], config.bottom_right[0]);\n    const minZ = Math.min(config.top_left[1], config.bottom_right[1]);\n    const maxZ = Math.max(config.top_left[1], config.bottom_right[1]);\n    const normX = px / imgWidth;\n    const normZ = 1 - py / imgHeight;\n    const x = minX + normX * (maxX - minX);\n    const z = minZ + normZ * (maxZ - minZ);\n    return {\n      x: x.toFixed(1),\n      z: z.toFixed(1)\n    };\n  }\n  useEffect(() => {\n    fetch(\"/map/config\").then(res => res.json()).then(setConfig).catch(console.error);\n  }, [refreshCounter]);\n  useEffect(() => {\n    if (!config) return;\n    if (mapRef.current) {\n      mapRef.current.off();\n      mapRef.current.remove();\n      mapRef.current = null;\n    }\n    const bounds = [[0, 0], [imgHeight, imgWidth]];\n    const map = L.map(\"map\", {\n      crs: L.CRS.Simple,\n      minZoom: -5,\n      maxZoom: 5,\n      zoomControl: true\n    });\n    const imageUrl = `/maps/map.png?v=${refreshCounter}`;\n    L.imageOverlay(imageUrl, bounds).addTo(map);\n    map.fitBounds(bounds);\n    mapRef.current = map;\n    setPlayers([]);\n    playersRef.current = {};\n    setBuildings({});\n    buildingsRef.current = {};\n    if (ws) {\n      ws.close();\n      setWs(null);\n    }\n    const socket = new WebSocket(`ws://${window.location.hostname}:8000/ws`);\n    socket.onopen = () => {\n      console.log(\"WebSocket connected\");\n    };\n    socket.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.type === \"player_position\" && data.name) {\n          playersRef.current[data.name] = {\n            x: Number(data.x),\n            z: Number(data.z),\n            lastSeen: Date.now()\n          };\n          setPlayers(Object.entries(playersRef.current).map(([name, pos]) => ({\n            name,\n            x: Number(pos.x),\n            z: Number(pos.z)\n          })));\n        }\n        if (data.type === \"building_damage\") {\n          const key = `${data.coords.x}_${data.coords.y}_${data.coords.z}`;\n          buildingsRef.current[key] = {\n            buildingType: data.buildingType,\n            percent: data.percent,\n            coords: data.coords,\n            lastSeen: Date.now()\n          };\n          setBuildings({\n            ...buildingsRef.current\n          });\n        }\n        if (data.type === \"building_remove\") {\n          const key = `${data.coords.x}_${data.coords.y}_${data.coords.z}`;\n          delete buildingsRef.current[key];\n          setBuildings({\n            ...buildingsRef.current\n          });\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    socket.onclose = () => {\n      console.log(\"WebSocket closed\");\n    };\n    map.on(\"mousemove\", e => {\n      if (!config) return;\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      const mcCoords = imageCoordsToMC(lng, lat);\n      if (mcCoords) {\n        setCursorCoords(mcCoords);\n      } else {\n        setCursorCoords(null);\n      }\n    });\n    setWs(socket);\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.off();\n        mapRef.current.remove();\n        mapRef.current = null;\n      }\n      socket.close();\n    };\n  }, [config, refreshCounter]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      let changed = false;\n      Object.entries(playersRef.current).forEach(([name, pos]) => {\n        if (now - pos.lastSeen > PLAYER_TIMEOUT_MS) {\n          delete playersRef.current[name];\n          changed = true;\n        }\n      });\n      if (changed) {\n        setPlayers(Object.entries(playersRef.current).map(([name, pos]) => ({\n          name,\n          x: Number(pos.x),\n          z: Number(pos.z)\n        })));\n      }\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    if (!Object.keys(buildings).length) return;\n    const interval = setInterval(() => {\n      const now = Date.now();\n      let changed = false;\n      Object.entries(buildingsRef.current).forEach(([key, data]) => {\n        if (data.percent >= 60 && now - data.lastSeen > BUILDING_REMOVE_TIMEOUT_MS) {\n          delete buildingsRef.current[key];\n          changed = true;\n        }\n      });\n      if (changed) {\n        setBuildings({\n          ...buildingsRef.current\n        });\n      }\n    }, 5000);\n    return () => clearInterval(interval);\n  }, [buildings]);\n  useEffect(() => {\n    if (!mapRef.current) return;\n\n    // Удаляем старые маркеры\n    mapRef.current.eachLayer(layer => {\n      if (layer instanceof L.Marker) {\n        mapRef.current.removeLayer(layer);\n      }\n    });\n\n    // Кластеризуем игроков по близости\n    const clusters = groupNearbyPlayers(players);\n    clusters.forEach(cluster => {\n      const {\n        x,\n        z\n      } = cluster[0];\n      const [px, py] = mcToImageCoords(x, z);\n      if (cluster.length === 1) {\n        const {\n          name\n        } = cluster[0];\n        L.marker([py, px], {\n          icon: playerIcon(name)\n        }).addTo(mapRef.current).bindPopup(name);\n      } else {\n        L.marker([py, px], {\n          icon: clusterIcon(cluster.length)\n        }).addTo(mapRef.current).bindPopup(cluster.map(p => p.name).join(\", \"));\n      }\n    });\n\n    // Отрисовка зданий\n    Object.values(buildings).forEach(({\n      buildingType,\n      percent,\n      coords\n    }) => {\n      const [px, py] = mcToImageCoords(coords.x, coords.z);\n      L.marker([py, px], {\n        icon: buildingIcon(buildingType, percent)\n      }).addTo(mapRef.current).bindPopup(`${buildingType} (${percent}%)`);\n    });\n  }, [players, buildings, config]);\n  async function handleUpload(e) {\n    e.preventDefault();\n    setUploading(true);\n    const form = e.target;\n    const file = form.file.files[0];\n    const top_left_x = form.top_left_x.value;\n    const top_left_z = form.top_left_z.value;\n    const bottom_right_x = form.bottom_right_x.value;\n    const bottom_right_z = form.bottom_right_z.value;\n    if (!file || !top_left_x || !top_left_z || !bottom_right_x || !bottom_right_z) {\n      alert(\"Все поля должны быть заполнены\");\n      setUploading(false);\n      return;\n    }\n    const data = new FormData();\n    data.append(\"file\", file);\n    try {\n      let res = await fetch(\"/map/upload\", {\n        method: \"POST\",\n        body: data\n      });\n      let json = await res.json();\n      if (json.status !== \"ok\") throw new Error(\"Ошибка загрузки файла\");\n      res = await fetch(\"/map/set_bounds\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: new URLSearchParams({\n          top_left_x,\n          top_left_z,\n          bottom_right_x,\n          bottom_right_z\n        })\n      });\n      json = await res.json();\n      if (json.status !== \"ok\") throw new Error(\"Ошибка установки границ\");\n      alert(\"Карта обновлена!\");\n      setRefreshCounter(c => c + 1);\n    } catch (err) {\n      alert(\"Ошибка: \" + err.message);\n    }\n    setUploading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: \"70vh\",\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this), cursorCoords && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      children: [\"\\u041A\\u043E\\u043E\\u0440\\u0434\\u0438\\u043D\\u0430\\u0442\\u044B Minecraft: X = \", cursorCoords.x, \", Z = \", cursorCoords.z]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      style: {\n        marginTop: 20,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u0443 \\u0438 \\u0443\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0433\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0412\\u0435\\u0440\\u0445\\u043D\\u0438\\u0439 \\u043B\\u0435\\u0432\\u044B\\u0439 X: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"top_left_x\",\n            step: \"0.1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0412\\u0435\\u0440\\u0445\\u043D\\u0438\\u0439 \\u043B\\u0435\\u0432\\u044B\\u0439 Z: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"top_left_z\",\n            step: \"0.1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041D\\u0438\\u0436\\u043D\\u0438\\u0439 \\u043F\\u0440\\u0430\\u0432\\u044B\\u0439 X: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"bottom_right_x\",\n            step: \"0.1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041D\\u0438\\u0436\\u043D\\u0438\\u0439 \\u043F\\u0440\\u0430\\u0432\\u044B\\u0439 Z: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"bottom_right_z\",\n            step: \"0.1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: uploading,\n        type: \"submit\",\n        children: uploading ? \"Загрузка...\" : \"Обновить карту\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MapView, \"KzsyryHyG6QbgZlRsfizfCyOFf4=\");\n_c = MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useState","useRef","L","jsxDEV","_jsxDEV","Fragment","_Fragment","DISTANCE_THRESHOLD","distance2D","x1","z1","x2","z2","dx","dz","Math","sqrt","groupNearbyPlayers","players","clusters","visited","Set","forEach","player","i","has","cluster","add","other","j","x","z","push","MapView","_s","mapRef","config","setConfig","setPlayers","playersRef","buildings","setBuildings","buildingsRef","ws","setWs","uploading","setUploading","cursorCoords","setCursorCoords","refreshCounter","setRefreshCounter","imgWidth","imgHeight","PLAYER_TIMEOUT_MS","BUILDING_REMOVE_TIMEOUT_MS","playerIcon","name","divIcon","className","html","iconSize","clusterIcon","count","buildingIcons","buildingIcon","buildingType","percent","borderColor","iconAnchor","mcToImageCoords","minX","min","top_left","bottom_right","maxX","max","minZ","maxZ","normX","normZ","px","py","imageCoordsToMC","toFixed","fetch","then","res","json","catch","console","error","current","off","remove","bounds","map","crs","CRS","Simple","minZoom","maxZoom","zoomControl","imageUrl","imageOverlay","addTo","fitBounds","close","socket","WebSocket","window","location","hostname","onopen","log","onmessage","event","data","JSON","parse","type","Number","lastSeen","Date","now","Object","entries","pos","key","coords","y","e","onclose","on","lat","lng","latlng","mcCoords","interval","setInterval","changed","clearInterval","keys","length","eachLayer","layer","Marker","removeLayer","marker","icon","bindPopup","p","join","values","handleUpload","preventDefault","form","target","file","files","top_left_x","value","top_left_z","bottom_right_x","bottom_right_z","alert","FormData","append","method","body","status","Error","headers","URLSearchParams","c","err","message","children","id","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","onSubmit","padding","accept","step","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Андрей/Work/Map/client/src/MapView.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport L from \"leaflet\";\r\n\r\nconst DISTANCE_THRESHOLD = 5;\r\n\r\nfunction distance2D(x1, z1, x2, z2) {\r\n  const dx = x1 - x2;\r\n  const dz = z1 - z2;\r\n  return Math.sqrt(dx * dx + dz * dz);\r\n}\r\n\r\nfunction groupNearbyPlayers(players) {\r\n  const clusters = [];\r\n  const visited = new Set();\r\n\r\n  players.forEach((player, i) => {\r\n    if (visited.has(i)) return;\r\n\r\n    const cluster = [player];\r\n    visited.add(i);\r\n\r\n    players.forEach((other, j) => {\r\n      if (i === j || visited.has(j)) return;\r\n      if (distance2D(player.x, player.z, other.x, other.z) <= DISTANCE_THRESHOLD) {\r\n        cluster.push(other);\r\n        visited.add(j);\r\n      }\r\n    });\r\n\r\n    clusters.push(cluster);\r\n  });\r\n\r\n  return clusters;\r\n}\r\n\r\nexport default function MapView() {\r\n  const mapRef = useRef(null);\r\n  const [config, setConfig] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const playersRef = useRef({});\r\n  const [buildings, setBuildings] = useState({});\r\n  const buildingsRef = useRef({});\r\n\r\n  const [ws, setWs] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [cursorCoords, setCursorCoords] = useState(null);\r\n  const [refreshCounter, setRefreshCounter] = useState(0);\r\n\r\n  const imgWidth = 1280;\r\n  const imgHeight = 634;\r\n\r\n  const PLAYER_TIMEOUT_MS = 10000;\r\n  const BUILDING_REMOVE_TIMEOUT_MS = 3 * 60 * 1000;\r\n\r\n  const playerIcon = (name) =>\r\n    L.divIcon({\r\n      className: \"player-icon\",\r\n      html: `<div style=\"\r\n        background-image:url('https://mc-heads.net/avatar/${name}/32');\r\n        width:32px; height:32px;\r\n        border-radius:50%;\r\n        border: 2px solid white;\r\n        background-size: cover;\r\n      \"></div>`,\r\n      iconSize: [32, 32],\r\n    });\r\n\r\n  const clusterIcon = (count) =>\r\n    L.divIcon({\r\n      className: \"player-cluster-icon\",\r\n      html: `<div style=\"\r\n        background-color: rgba(0, 0, 0, 0.7);\r\n        color: white;\r\n        font-weight: bold;\r\n        border-radius: 50%;\r\n        width: 32px;\r\n        height: 32px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        border: 2px solid white;\r\n        font-size: 14px;\r\n        user-select: none;\r\n      \">\r\n        +${count}\r\n      </div>`,\r\n      iconSize: [32, 32],\r\n    });\r\n\r\n  const buildingIcons = {\r\n    \"Башня лучников\": \"archerIcon.png\",\r\n    \"Башня пушкарей\": \"https://i.imgur.com/XTkn2Lu.png\",\r\n    \"Башня тесла\": \"https://i.imgur.com/YW5my0J.png\",\r\n    \"Корабль лучников\": \"https://i.imgur.com/hTqWxou.png\",\r\n    \"Корабль пушкарей\": \"https://i.imgur.com/ihvV1vJ.png\",\r\n    \"Корабль тесла\": \"https://i.imgur.com/Ev3VfhS.png\",\r\n  };\r\n\r\n  function buildingIcon(buildingType, percent) {\r\n    let borderColor = \"black\";\r\n    if (percent >= 60) borderColor = \"green\";\r\n    else if (percent >= 20) borderColor = \"red\";\r\n\r\n    return L.divIcon({\r\n      className: \"building-icon\",\r\n      html: `<div style=\"\r\n        background-image: url('${buildingIcons[buildingType] || buildingIcons['Башня лучников']}');\r\n        width: 12px;\r\n        height: 12px;\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n        border: 3px solid ${borderColor};\r\n        border-radius: 6px;\r\n        box-sizing: border-box;\r\n      \"></div>`,\r\n      iconSize: [12, 12],\r\n      iconAnchor: [6, 6],\r\n    });\r\n  }\r\n\r\n  function mcToImageCoords(x, z) {\r\n    if (!config) return [0, 0];\r\n\r\n    const minX = Math.min(config.top_left[0], config.bottom_right[0]);\r\n    const maxX = Math.max(config.top_left[0], config.bottom_right[0]);\r\n    const minZ = Math.min(config.top_left[1], config.bottom_right[1]);\r\n    const maxZ = Math.max(config.top_left[1], config.bottom_right[1]);\r\n\r\n    const normX = (x - minX) / (maxX - minX);\r\n    const normZ = (z - minZ) / (maxZ - minZ);\r\n\r\n    const px = normX * imgWidth;\r\n    const py = (1 - normZ) * imgHeight;\r\n\r\n    return [px, py];\r\n  }\r\n\r\n  function imageCoordsToMC(px, py) {\r\n    if (!config) return null;\r\n\r\n    const minX = Math.min(config.top_left[0], config.bottom_right[0]);\r\n    const maxX = Math.max(config.top_left[0], config.bottom_right[0]);\r\n    const minZ = Math.min(config.top_left[1], config.bottom_right[1]);\r\n    const maxZ = Math.max(config.top_left[1], config.bottom_right[1]);\r\n\r\n    const normX = px / imgWidth;\r\n    const normZ = 1 - py / imgHeight;\r\n\r\n    const x = minX + normX * (maxX - minX);\r\n    const z = minZ + normZ * (maxZ - minZ);\r\n\r\n    return { x: x.toFixed(1), z: z.toFixed(1) };\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(\"/map/config\")\r\n      .then((res) => res.json())\r\n      .then(setConfig)\r\n      .catch(console.error);\r\n  }, [refreshCounter]);\r\n\r\n  useEffect(() => {\r\n    if (!config) return;\r\n\r\n    if (mapRef.current) {\r\n      mapRef.current.off();\r\n      mapRef.current.remove();\r\n      mapRef.current = null;\r\n    }\r\n\r\n    const bounds = [\r\n      [0, 0],\r\n      [imgHeight, imgWidth],\r\n    ];\r\n\r\n    const map = L.map(\"map\", {\r\n      crs: L.CRS.Simple,\r\n      minZoom: -5,\r\n      maxZoom: 5,\r\n      zoomControl: true,\r\n    });\r\n\r\n    const imageUrl = `/maps/map.png?v=${refreshCounter}`;\r\n\r\n    L.imageOverlay(imageUrl, bounds).addTo(map);\r\n    map.fitBounds(bounds);\r\n\r\n    mapRef.current = map;\r\n\r\n    setPlayers([]);\r\n    playersRef.current = {};\r\n    setBuildings({});\r\n    buildingsRef.current = {};\r\n    if (ws) {\r\n      ws.close();\r\n      setWs(null);\r\n    }\r\n\r\n    const socket = new WebSocket(`ws://${window.location.hostname}:8000/ws`);\r\n\r\n    socket.onopen = () => {\r\n      console.log(\"WebSocket connected\");\r\n    };\r\n\r\n    socket.onmessage = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n\r\n        if (data.type === \"player_position\" && data.name) {\r\n          playersRef.current[data.name] = {\r\n            x: Number(data.x),\r\n            z: Number(data.z),\r\n            lastSeen: Date.now(),\r\n          };\r\n          setPlayers(\r\n            Object.entries(playersRef.current).map(([name, pos]) => ({\r\n              name,\r\n              x: Number(pos.x),\r\n              z: Number(pos.z),\r\n            }))\r\n          );\r\n        }\r\n\r\n        if (data.type === \"building_damage\") {\r\n          const key = `${data.coords.x}_${data.coords.y}_${data.coords.z}`;\r\n          buildingsRef.current[key] = {\r\n            buildingType: data.buildingType,\r\n            percent: data.percent,\r\n            coords: data.coords,\r\n            lastSeen: Date.now(),\r\n          };\r\n          setBuildings({ ...buildingsRef.current });\r\n        }\r\n\r\n        if (data.type === \"building_remove\") {\r\n          const key = `${data.coords.x}_${data.coords.y}_${data.coords.z}`;\r\n          delete buildingsRef.current[key];\r\n          setBuildings({ ...buildingsRef.current });\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    };\r\n\r\n    socket.onclose = () => {\r\n      console.log(\"WebSocket closed\");\r\n    };\r\n\r\n    map.on(\"mousemove\", (e) => {\r\n      if (!config) return;\r\n      const { lat, lng } = e.latlng;\r\n      const mcCoords = imageCoordsToMC(lng, lat);\r\n      if (mcCoords) {\r\n        setCursorCoords(mcCoords);\r\n      } else {\r\n        setCursorCoords(null);\r\n      }\r\n    });\r\n\r\n    setWs(socket);\r\n\r\n    return () => {\r\n      if (mapRef.current) {\r\n        mapRef.current.off();\r\n        mapRef.current.remove();\r\n        mapRef.current = null;\r\n      }\r\n      socket.close();\r\n    };\r\n  }, [config, refreshCounter]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const now = Date.now();\r\n      let changed = false;\r\n      Object.entries(playersRef.current).forEach(([name, pos]) => {\r\n        if (now - pos.lastSeen > PLAYER_TIMEOUT_MS) {\r\n          delete playersRef.current[name];\r\n          changed = true;\r\n        }\r\n      });\r\n      if (changed) {\r\n        setPlayers(\r\n          Object.entries(playersRef.current).map(([name, pos]) => ({\r\n            name,\r\n            x: Number(pos.x),\r\n            z: Number(pos.z),\r\n          }))\r\n        );\r\n      }\r\n    }, 2000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!Object.keys(buildings).length) return;\r\n\r\n    const interval = setInterval(() => {\r\n      const now = Date.now();\r\n      let changed = false;\r\n      Object.entries(buildingsRef.current).forEach(([key, data]) => {\r\n        if (data.percent >= 60 && now - data.lastSeen > BUILDING_REMOVE_TIMEOUT_MS) {\r\n          delete buildingsRef.current[key];\r\n          changed = true;\r\n        }\r\n      });\r\n      if (changed) {\r\n        setBuildings({ ...buildingsRef.current });\r\n      }\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [buildings]);\r\n\r\n  useEffect(() => {\r\n    if (!mapRef.current) return;\r\n\r\n    // Удаляем старые маркеры\r\n    mapRef.current.eachLayer((layer) => {\r\n      if (layer instanceof L.Marker) {\r\n        mapRef.current.removeLayer(layer);\r\n      }\r\n    });\r\n\r\n    // Кластеризуем игроков по близости\r\n    const clusters = groupNearbyPlayers(players);\r\n\r\n    clusters.forEach((cluster) => {\r\n      const { x, z } = cluster[0];\r\n      const [px, py] = mcToImageCoords(x, z);\r\n\r\n      if (cluster.length === 1) {\r\n        const { name } = cluster[0];\r\n        L.marker([py, px], { icon: playerIcon(name) })\r\n          .addTo(mapRef.current)\r\n          .bindPopup(name);\r\n      } else {\r\n        L.marker([py, px], { icon: clusterIcon(cluster.length) })\r\n          .addTo(mapRef.current)\r\n          .bindPopup(cluster.map((p) => p.name).join(\", \"));\r\n      }\r\n    });\r\n\r\n    // Отрисовка зданий\r\n    Object.values(buildings).forEach(({ buildingType, percent, coords }) => {\r\n      const [px, py] = mcToImageCoords(coords.x, coords.z);\r\n      L.marker([py, px], { icon: buildingIcon(buildingType, percent) })\r\n        .addTo(mapRef.current)\r\n        .bindPopup(`${buildingType} (${percent}%)`);\r\n    });\r\n  }, [players, buildings, config]);\r\n\r\n  async function handleUpload(e) {\r\n    e.preventDefault();\r\n    setUploading(true);\r\n\r\n    const form = e.target;\r\n    const file = form.file.files[0];\r\n    const top_left_x = form.top_left_x.value;\r\n    const top_left_z = form.top_left_z.value;\r\n    const bottom_right_x = form.bottom_right_x.value;\r\n    const bottom_right_z = form.bottom_right_z.value;\r\n\r\n    if (!file || !top_left_x || !top_left_z || !bottom_right_x || !bottom_right_z) {\r\n      alert(\"Все поля должны быть заполнены\");\r\n      setUploading(false);\r\n      return;\r\n    }\r\n\r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n\r\n    try {\r\n      let res = await fetch(\"/map/upload\", {\r\n        method: \"POST\",\r\n        body: data,\r\n      });\r\n      let json = await res.json();\r\n      if (json.status !== \"ok\") throw new Error(\"Ошибка загрузки файла\");\r\n\r\n      res = await fetch(\"/map/set_bounds\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n        body: new URLSearchParams({\r\n          top_left_x,\r\n          top_left_z,\r\n          bottom_right_x,\r\n          bottom_right_z,\r\n        }),\r\n      });\r\n      json = await res.json();\r\n      if (json.status !== \"ok\") throw new Error(\"Ошибка установки границ\");\r\n\r\n      alert(\"Карта обновлена!\");\r\n      setRefreshCounter((c) => c + 1);\r\n    } catch (err) {\r\n      alert(\"Ошибка: \" + err.message);\r\n    }\r\n\r\n    setUploading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"map\" style={{ height: \"70vh\", width: \"100%\" }}></div>\r\n\r\n      {cursorCoords && (\r\n        <div style={{ marginTop: 10 }}>\r\n          Координаты Minecraft: X = {cursorCoords.x}, Z = {cursorCoords.z}\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleUpload} style={{ marginTop: 20, padding: 10 }}>\r\n        <h3>Загрузить карту и установить границы</h3>\r\n        <div>\r\n          <input type=\"file\" name=\"file\" accept=\"image/*\" />\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Верхний левый X: <input type=\"number\" name=\"top_left_x\" step=\"0.1\" />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Верхний левый Z: <input type=\"number\" name=\"top_left_z\" step=\"0.1\" />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Нижний правый X: <input type=\"number\" name=\"bottom_right_x\" step=\"0.1\" />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Нижний правый Z: <input type=\"number\" name=\"bottom_right_z\" step=\"0.1\" />\r\n          </label>\r\n        </div>\r\n        <button disabled={uploading} type=\"submit\">\r\n          {uploading ? \"Загрузка...\" : \"Обновить карту\"}\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}