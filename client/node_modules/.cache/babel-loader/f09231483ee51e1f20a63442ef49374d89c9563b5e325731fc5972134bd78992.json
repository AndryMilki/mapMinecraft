{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439\\\\Work\\\\Map\\\\client\\\\src\\\\MapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MapView({\n  onMapChange\n}) {\n  _s();\n  const mapRef = useRef(null);\n  const markersRef = useRef({});\n  const [config, setConfig] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const playerIcon = name => L.divIcon({\n    className: \"player-icon\",\n    html: `<div style=\"background-image:url('https://mc-heads.net/avatar/${name}/32'); width:32px; height:32px; border-radius:50%; border: 2px solid white;\"></div>`,\n    iconSize: [32, 32]\n  });\n  const groupIcon = names => L.divIcon({\n    className: \"group-icon\",\n    html: `<div style=\"background:#444;color:#fff;width:32px;height:32px;border-radius:50%;display:flex;align-items:center;justify-content:center;border:2px solid white;font-size:14px;\">\n        +${names.length}\n      </div>`,\n    iconSize: [32, 32]\n  });\n  useEffect(() => {\n    fetch(\"/map/config\").then(res => res.json()).then(setConfig).catch(console.error);\n  }, [uploading]);\n  useEffect(() => {\n    if (!config) return;\n    if (mapRef.current) {\n      mapRef.current.remove();\n      mapRef.current = null;\n    }\n    const {\n      top_left,\n      bottom_right\n    } = config;\n    const map = L.map(\"map\", {\n      crs: L.CRS.Simple,\n      minZoom: -5,\n      maxZoom: 5,\n      zoomControl: true\n    });\n    const bounds = [top_left, bottom_right];\n    L.imageOverlay(`/maps/map.png`, bounds).addTo(map);\n    map.fitBounds(bounds);\n    mapRef.current = map;\n    const socket = new WebSocket(`ws://${window.location.hostname}:8000/ws`);\n    socket.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.type === \"player_position\") {\n          updatePlayerMarker(data.name, data.x, data.z);\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    return () => socket.close();\n  }, [config]);\n  const updatePlayerMarker = (name, x, z) => {\n    // проверяем, есть ли маркер\n    if (markersRef.current[name]) {\n      markersRef.current[name].setLatLng([x, z]);\n    } else {\n      const marker = L.marker([x, z], {\n        icon: playerIcon(name)\n      }).addTo(mapRef.current);\n      markersRef.current[name] = marker;\n    }\n    regroupMarkers();\n  };\n  const regroupMarkers = () => {\n    const positions = {};\n    Object.entries(markersRef.current).forEach(([name, marker]) => {\n      const {\n        lat,\n        lng\n      } = marker.getLatLng();\n      const key = `${lat.toFixed(1)},${lng.toFixed(1)}`;\n      if (!positions[key]) positions[key] = [];\n      positions[key].push(name);\n    });\n    Object.entries(positions).forEach(([key, names]) => {\n      if (names.length > 1) {\n        names.forEach((n, idx) => {\n          if (idx === 0) {\n            markersRef.current[n].setIcon(groupIcon(names));\n          } else {\n            mapRef.current.removeLayer(markersRef.current[n]);\n          }\n        });\n      } else {\n        const n = names[0];\n        markersRef.current[n].setIcon(playerIcon(n));\n        if (!mapRef.current.hasLayer(markersRef.current[n])) {\n          markersRef.current[n].addTo(mapRef.current);\n        }\n      }\n    });\n  };\n  async function handleUpload(e) {\n    e.preventDefault();\n    setUploading(true);\n    const form = e.target;\n    const file = form.file.files[0];\n    const top_left_x = form.top_left_x.value;\n    const top_left_z = form.top_left_z.value;\n    const bottom_right_x = form.bottom_right_x.value;\n    const bottom_right_z = form.bottom_right_z.value;\n    if (!file || !top_left_x || !top_left_z || !bottom_right_x || !bottom_right_z) {\n      alert(\"Все поля должны быть заполнены\");\n      setUploading(false);\n      return;\n    }\n    const data = new FormData();\n    data.append(\"file\", file);\n    try {\n      let res = await fetch(\"/map/upload\", {\n        method: \"POST\",\n        body: data\n      });\n      let json = await res.json();\n      if (json.status !== \"ok\") throw new Error(\"Ошибка загрузки файла\");\n      res = await fetch(\"/map/set_bounds\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: new URLSearchParams({\n          top_left_x,\n          top_left_z,\n          bottom_right_x,\n          bottom_right_z\n        })\n      });\n      json = await res.json();\n      if (json.status !== \"ok\") throw new Error(\"Ошибка установки границ\");\n      alert(\"Карта обновлена!\");\n      onMapChange();\n    } catch (err) {\n      alert(\"Ошибка: \" + err.message);\n    }\n    setUploading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: \"70vh\",\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      style: {\n        marginTop: 20,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u0443 \\u0438 \\u0443\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0433\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"top_left_x\",\n        step: \"0.1\",\n        placeholder: \"\\u0412\\u0435\\u0440\\u0445\\u043D\\u0438\\u0439 \\u043B\\u0435\\u0432\\u044B\\u0439 X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"top_left_z\",\n        step: \"0.1\",\n        placeholder: \"\\u0412\\u0435\\u0440\\u0445\\u043D\\u0438\\u0439 \\u043B\\u0435\\u0432\\u044B\\u0439 Z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"bottom_right_x\",\n        step: \"0.1\",\n        placeholder: \"\\u041D\\u0438\\u0436\\u043D\\u0438\\u0439 \\u043F\\u0440\\u0430\\u0432\\u044B\\u0439 X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"bottom_right_z\",\n        step: \"0.1\",\n        placeholder: \"\\u041D\\u0438\\u0436\\u043D\\u0438\\u0439 \\u043F\\u0440\\u0430\\u0432\\u044B\\u0439 Z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: uploading,\n        type: \"submit\",\n        children: uploading ? \"Загрузка...\" : \"Обновить карту\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MapView, \"JOTbKZqUKPyWhFB76XoE1E5N8rk=\");\n_c = MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","jsxDEV","_jsxDEV","Fragment","_Fragment","MapView","onMapChange","_s","mapRef","markersRef","config","setConfig","uploading","setUploading","playerIcon","name","divIcon","className","html","iconSize","groupIcon","names","length","fetch","then","res","json","catch","console","error","current","remove","top_left","bottom_right","map","crs","CRS","Simple","minZoom","maxZoom","zoomControl","bounds","imageOverlay","addTo","fitBounds","socket","WebSocket","window","location","hostname","onmessage","event","data","JSON","parse","type","updatePlayerMarker","x","z","e","close","setLatLng","marker","icon","regroupMarkers","positions","Object","entries","forEach","lat","lng","getLatLng","key","toFixed","push","n","idx","setIcon","removeLayer","hasLayer","handleUpload","preventDefault","form","target","file","files","top_left_x","value","top_left_z","bottom_right_x","bottom_right_z","alert","FormData","append","method","body","status","Error","headers","URLSearchParams","err","message","children","id","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","marginTop","padding","accept","step","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Андрей/Work/Map/client/src/MapView.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport L from \"leaflet\";\r\n\r\nexport default function MapView({ onMapChange }) {\r\n  const mapRef = useRef(null);\r\n  const markersRef = useRef({});\r\n  const [config, setConfig] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const playerIcon = (name) =>\r\n    L.divIcon({\r\n      className: \"player-icon\",\r\n      html: `<div style=\"background-image:url('https://mc-heads.net/avatar/${name}/32'); width:32px; height:32px; border-radius:50%; border: 2px solid white;\"></div>`,\r\n      iconSize: [32, 32],\r\n    });\r\n\r\n  const groupIcon = (names) =>\r\n    L.divIcon({\r\n      className: \"group-icon\",\r\n      html: `<div style=\"background:#444;color:#fff;width:32px;height:32px;border-radius:50%;display:flex;align-items:center;justify-content:center;border:2px solid white;font-size:14px;\">\r\n        +${names.length}\r\n      </div>`,\r\n      iconSize: [32, 32],\r\n    });\r\n\r\n  useEffect(() => {\r\n    fetch(\"/map/config\")\r\n      .then((res) => res.json())\r\n      .then(setConfig)\r\n      .catch(console.error);\r\n  }, [uploading]);\r\n\r\n  useEffect(() => {\r\n    if (!config) return;\r\n\r\n    if (mapRef.current) {\r\n      mapRef.current.remove();\r\n      mapRef.current = null;\r\n    }\r\n\r\n    const { top_left, bottom_right } = config;\r\n    const map = L.map(\"map\", {\r\n      crs: L.CRS.Simple,\r\n      minZoom: -5,\r\n      maxZoom: 5,\r\n      zoomControl: true,\r\n    });\r\n\r\n    const bounds = [top_left, bottom_right];\r\n    L.imageOverlay(`/maps/map.png`, bounds).addTo(map);\r\n    map.fitBounds(bounds);\r\n\r\n    mapRef.current = map;\r\n\r\n    const socket = new WebSocket(`ws://${window.location.hostname}:8000/ws`);\r\n\r\n    socket.onmessage = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        if (data.type === \"player_position\") {\r\n          updatePlayerMarker(data.name, data.x, data.z);\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    };\r\n\r\n    return () => socket.close();\r\n  }, [config]);\r\n\r\n  const updatePlayerMarker = (name, x, z) => {\r\n    // проверяем, есть ли маркер\r\n    if (markersRef.current[name]) {\r\n      markersRef.current[name].setLatLng([x, z]);\r\n    } else {\r\n      const marker = L.marker([x, z], { icon: playerIcon(name) }).addTo(mapRef.current);\r\n      markersRef.current[name] = marker;\r\n    }\r\n    regroupMarkers();\r\n  };\r\n\r\n  const regroupMarkers = () => {\r\n    const positions = {};\r\n\r\n    Object.entries(markersRef.current).forEach(([name, marker]) => {\r\n      const { lat, lng } = marker.getLatLng();\r\n      const key = `${lat.toFixed(1)},${lng.toFixed(1)}`;\r\n      if (!positions[key]) positions[key] = [];\r\n      positions[key].push(name);\r\n    });\r\n\r\n    Object.entries(positions).forEach(([key, names]) => {\r\n      if (names.length > 1) {\r\n        names.forEach((n, idx) => {\r\n          if (idx === 0) {\r\n            markersRef.current[n].setIcon(groupIcon(names));\r\n          } else {\r\n            mapRef.current.removeLayer(markersRef.current[n]);\r\n          }\r\n        });\r\n      } else {\r\n        const n = names[0];\r\n        markersRef.current[n].setIcon(playerIcon(n));\r\n        if (!mapRef.current.hasLayer(markersRef.current[n])) {\r\n          markersRef.current[n].addTo(mapRef.current);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  async function handleUpload(e) {\r\n    e.preventDefault();\r\n    setUploading(true);\r\n    const form = e.target;\r\n    const file = form.file.files[0];\r\n    const top_left_x = form.top_left_x.value;\r\n    const top_left_z = form.top_left_z.value;\r\n    const bottom_right_x = form.bottom_right_x.value;\r\n    const bottom_right_z = form.bottom_right_z.value;\r\n\r\n    if (!file || !top_left_x || !top_left_z || !bottom_right_x || !bottom_right_z) {\r\n      alert(\"Все поля должны быть заполнены\");\r\n      setUploading(false);\r\n      return;\r\n    }\r\n\r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n\r\n    try {\r\n      let res = await fetch(\"/map/upload\", { method: \"POST\", body: data });\r\n      let json = await res.json();\r\n      if (json.status !== \"ok\") throw new Error(\"Ошибка загрузки файла\");\r\n\r\n      res = await fetch(\"/map/set_bounds\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n        body: new URLSearchParams({\r\n          top_left_x,\r\n          top_left_z,\r\n          bottom_right_x,\r\n          bottom_right_z,\r\n        }),\r\n      });\r\n      json = await res.json();\r\n      if (json.status !== \"ok\") throw new Error(\"Ошибка установки границ\");\r\n\r\n      alert(\"Карта обновлена!\");\r\n      onMapChange();\r\n    } catch (err) {\r\n      alert(\"Ошибка: \" + err.message);\r\n    }\r\n    setUploading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"map\" style={{ height: \"70vh\", width: \"100%\" }}></div>\r\n\r\n      <form onSubmit={handleUpload} style={{ marginTop: 20, padding: 10 }}>\r\n        <h3>Загрузить карту и установить границы</h3>\r\n        <input type=\"file\" name=\"file\" accept=\"image/*\" />\r\n        <input type=\"number\" name=\"top_left_x\" step=\"0.1\" placeholder=\"Верхний левый X\" />\r\n        <input type=\"number\" name=\"top_left_z\" step=\"0.1\" placeholder=\"Верхний левый Z\" />\r\n        <input type=\"number\" name=\"bottom_right_x\" step=\"0.1\" placeholder=\"Нижний правый X\" />\r\n        <input type=\"number\" name=\"bottom_right_z\" step=\"0.1\" placeholder=\"Нижний правый Z\" />\r\n        <button disabled={uploading} type=\"submit\">\r\n          {uploading ? \"Загрузка...\" : \"Обновить карту\"}\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}