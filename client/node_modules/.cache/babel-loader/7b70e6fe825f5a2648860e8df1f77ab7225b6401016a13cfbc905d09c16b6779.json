{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439\\\\Work\\\\Map\\\\client\\\\src\\\\MapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport L from \"leaflet\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MapView() {\n  _s();\n  const mapRef = useRef(null);\n  const [config, setConfig] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const playersRef = useRef({});\n  const [buildings, setBuildings] = useState({});\n  const buildingsRef = useRef({});\n  const [ws, setWs] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [cursorCoords, setCursorCoords] = useState(null);\n  const [refreshCounter, setRefreshCounter] = useState(0);\n  const [imgSize, setImgSize] = useState({\n    width: 1280,\n    height: 634\n  });\n  const [logFilePath, setLogFilePath] = useState(\"\");\n  const [logWatching, setLogWatching] = useState(false);\n  const [logWatchMsg, setLogWatchMsg] = useState(null);\n  const [logWatchLoading, setLogWatchLoading] = useState(false);\n  const PLAYER_TIMEOUT_MS = 10000;\n  const BUILDING_REMOVE_TIMEOUT_MS = 3 * 60 * 1000;\n  const DISTANCE_THRESHOLD = 15;\n  function distance2D(x1, z1, x2, z2) {\n    const dx = x1 - x2;\n    const dz = z1 - z2;\n    return Math.sqrt(dx * dx + dz * dz);\n  }\n  function groupNearbyPlayers(players) {\n    const clusters = [];\n    const visited = new Set();\n    players.forEach((player, i) => {\n      if (visited.has(i)) return;\n      const cluster = [player];\n      visited.add(i);\n      players.forEach((other, j) => {\n        if (i === j || visited.has(j)) return;\n        if (distance2D(player.x, player.z, other.x, other.z) <= DISTANCE_THRESHOLD) {\n          cluster.push(other);\n          visited.add(j);\n        }\n      });\n      clusters.push(cluster);\n    });\n    return clusters;\n  }\n  const playerIcon = name => L.divIcon({\n    className: \"player-icon\",\n    html: `<div style=\"\n        background-image:url('https://mc-heads.net/avatar/${name}/32');\n        width:32px; height:32px;\n        border-radius:50%;\n        border: 2px solid white;\n        background-size: cover;\n      \"></div>`,\n    iconSize: [32, 32]\n  });\n  const clusterIcon = count => L.divIcon({\n    className: \"player-cluster-icon\",\n    html: `<div style=\"\n        background-color: rgba(0, 0, 0, 0.7);\n        color: white;\n        font-weight: bold;\n        border-radius: 50%;\n        width: 32px;\n        height: 32px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        border: 2px solid white;\n        font-size: 14px;\n        user-select: none;\n      \">\n        +${count}\n      </div>`,\n    iconSize: [32, 32]\n  });\n  const buildingIcons = {\n    \"Башня лучников\": \"/icons/archerIcon.png\",\n    \"Башня пушкарей\": \"/icons/cannonIcon.png\",\n    \"Башня тесла\": \"/icons/teslaIcon.png\",\n    \"Корабль лучников\": \"/icons/archerShipIcon.png\",\n    \"Корабль пушкарей\": \"/icons/cannonShipIcon.png\",\n    \"Корабль тесла\": \"/icons/teslaShipIcon.png\"\n  };\n  function buildingIcon(buildingType, percent) {\n    let borderColor = \"black\";\n    if (percent >= 60) borderColor = \"green\";else if (percent >= 20) borderColor = \"red\";\n    return L.divIcon({\n      className: \"building-icon\",\n      html: `<div style=\"\n        background-image: url('${buildingIcons[buildingType] || buildingIcons['Башня лучников']}');\n        width: 20px;\n        height: 20px;\n        background-size: contain;\n        background-repeat: no-repeat;\n        border: 3px solid ${borderColor};\n        border-radius: 6px;\n        box-sizing: border-box;\n      \"></div>`,\n      iconSize: [20, 20],\n      iconAnchor: [12, 12]\n    });\n  }\n  function mcToImageCoords(x, z) {\n    if (!config) return [0, 0];\n    const minX = Math.min(config.top_left[0], config.bottom_right[0]);\n    const maxX = Math.max(config.top_left[0], config.bottom_right[0]);\n    const minZ = Math.min(config.top_left[1], config.bottom_right[1]);\n    const maxZ = Math.max(config.top_left[1], config.bottom_right[1]);\n    const normX = (x - minX) / (maxX - minX);\n    const normZ = (z - minZ) / (maxZ - minZ);\n    const px = normX * imgSize.width;\n    const py = (1 - normZ) * imgSize.height;\n    return [px, py];\n  }\n  function imageCoordsToMC(px, py) {\n    if (!config) return null;\n    const minX = Math.min(config.top_left[0], config.bottom_right[0]);\n    const maxX = Math.max(config.top_left[0], config.bottom_right[0]);\n    const minZ = Math.min(config.top_left[1], config.bottom_right[1]);\n    const maxZ = Math.max(config.top_left[1], config.bottom_right[1]);\n    const normX = px / imgSize.width;\n    const normZ = 1 - py / imgSize.height;\n    const x = minX + normX * (maxX - minX);\n    const z = minZ + normZ * (maxZ - minZ);\n    return {\n      x: x.toFixed(1),\n      z: z.toFixed(1)\n    };\n  }\n\n  // Загружаем конфиг карты и изображение, чтобы отрисовать\n  useEffect(() => {\n    fetch(\"/map/config\").then(res => res.json()).then(setConfig).catch(console.error);\n  }, [refreshCounter]);\n  useEffect(() => {\n    if (!config) return;\n    const imageUrl = `/maps/map.png?v=${refreshCounter}`;\n    const img = new Image();\n    img.onload = () => {\n      setImgSize({\n        width: img.naturalWidth,\n        height: img.naturalHeight\n      });\n    };\n    img.src = imageUrl;\n  }, [config, refreshCounter]);\n\n  // Подключаем WebSocket, обновляем карту, очищаем при размонтировании\n  useEffect(() => {\n    if (!config || !imgSize.width || !imgSize.height) return;\n    if (mapRef.current) {\n      mapRef.current.off();\n      mapRef.current.remove();\n      mapRef.current = null;\n    }\n    const bounds = [[0, 0], [imgSize.height, imgSize.width]];\n    const map = L.map(\"map\", {\n      crs: L.CRS.Simple,\n      minZoom: -5,\n      maxZoom: 5,\n      zoomControl: true\n    });\n    const imageUrl = `/maps/map.png?v=${refreshCounter}`;\n    L.imageOverlay(imageUrl, bounds).addTo(map);\n    map.fitBounds(bounds);\n    mapRef.current = map;\n    if (ws) {\n      ws.close();\n      setWs(null);\n    }\n\n    // Подключаем WS\n    const socket = new WebSocket(`ws://${window.location.hostname}:8000/ws`);\n    socket.onopen = () => {\n      console.log(\"WebSocket connected\");\n    };\n    socket.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.type === \"player_position\" && data.name) {\n          playersRef.current[data.name] = {\n            x: Number(data.x),\n            z: Number(data.z),\n            lastSeen: Date.now()\n          };\n          setPlayers(Object.entries(playersRef.current).map(([name, pos]) => ({\n            name,\n            x: Number(pos.x),\n            z: Number(pos.z)\n          })));\n        }\n        if (data.type === \"building_damage\") {\n          const key = `${data.coords.x}_${data.coords.y}_${data.coords.z}`;\n          buildingsRef.current[key] = {\n            buildingType: data.buildingType,\n            percent: data.percent,\n            coords: data.coords,\n            lastSeen: Date.now()\n          };\n          setBuildings({\n            ...buildingsRef.current\n          });\n        }\n        if (data.type === \"building_remove\") {\n          const key = `${data.coords.x}_${data.coords.y}_${data.coords.z}`;\n          delete buildingsRef.current[key];\n          setBuildings({\n            ...buildingsRef.current\n          });\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    socket.onclose = () => {\n      console.log(\"WebSocket closed\");\n    };\n    map.on(\"mousemove\", e => {\n      if (!config) return;\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      const mcCoords = imageCoordsToMC(lng, lat);\n      if (mcCoords) {\n        setCursorCoords(mcCoords);\n      } else {\n        setCursorCoords(null);\n      }\n    });\n    setWs(socket);\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.off();\n        mapRef.current.remove();\n        mapRef.current = null;\n      }\n      socket.close();\n    };\n  }, [config, refreshCounter, imgSize]);\n\n  // Таймаут для игроков\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = Date.now();\n      let changed = false;\n      Object.entries(playersRef.current).forEach(([name, pos]) => {\n        if (now - pos.lastSeen > PLAYER_TIMEOUT_MS) {\n          delete playersRef.current[name];\n          changed = true;\n        }\n      });\n      if (changed) {\n        setPlayers(Object.entries(playersRef.current).map(([name, pos]) => ({\n          name,\n          x: Number(pos.x),\n          z: Number(pos.z)\n        })));\n      }\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Таймаут для зданий\n  useEffect(() => {\n    if (!Object.keys(buildings).length) return;\n    const interval = setInterval(() => {\n      const now = Date.now();\n      let changed = false;\n      Object.entries(buildingsRef.current).forEach(([key, data]) => {\n        if (data.percent >= 60 && now - data.lastSeen > BUILDING_REMOVE_TIMEOUT_MS) {\n          delete buildingsRef.current[key];\n          changed = true;\n        }\n      });\n      if (changed) {\n        setBuildings({\n          ...buildingsRef.current\n        });\n      }\n    }, 5000);\n    return () => clearInterval(interval);\n  }, [buildings]);\n\n  // Обновляем маркеры игроков и зданий\n  useEffect(() => {\n    if (!mapRef.current) return;\n    mapRef.current.eachLayer(layer => {\n      if (layer instanceof L.Marker) {\n        mapRef.current.removeLayer(layer);\n      }\n    });\n    const clusters = groupNearbyPlayers(players);\n    clusters.forEach(cluster => {\n      const {\n        x,\n        z\n      } = cluster[0];\n      const [px, py] = mcToImageCoords(x, z);\n      if (cluster.length === 1) {\n        const {\n          name\n        } = cluster[0];\n        L.marker([py, px], {\n          icon: playerIcon(name)\n        }).addTo(mapRef.current).bindPopup(name);\n      } else {\n        L.marker([py, px], {\n          icon: clusterIcon(cluster.length)\n        }).addTo(mapRef.current).bindPopup(cluster.map(p => p.name).join(\", \"));\n      }\n    });\n    Object.values(buildings).forEach(({\n      buildingType,\n      percent,\n      coords\n    }) => {\n      const [px, py] = mcToImageCoords(coords.x, coords.z);\n      L.marker([py, px], {\n        icon: buildingIcon(buildingType, percent)\n      }).addTo(mapRef.current).bindPopup(`${buildingType} (${percent}%)`);\n    });\n  }, [players, buildings, config, imgSize]);\n  async function handleUpload(e) {\n    e.preventDefault();\n    setUploading(true);\n    const form = e.target;\n    const file = form.file.files[0];\n    const top_left_x = form.top_left_x.value;\n    const top_left_z = form.top_left_z.value;\n    const bottom_right_x = form.bottom_right_x.value;\n    const bottom_right_z = form.bottom_right_z.value;\n    if (!file || !top_left_x || !top_left_z || !bottom_right_x || !bottom_right_z) {\n      alert(\"Все поля должны быть заполнены\");\n      setUploading(false);\n      return;\n    }\n    const data = new FormData();\n    data.append(\"file\", file);\n    try {\n      let res = await fetch(\"/map/upload\", {\n        method: \"POST\",\n        body: data\n      });\n      let json = await res.json();\n      if (json.status !== \"ok\") throw new Error(\"Ошибка загрузки файла\");\n      res = await fetch(\"/map/set_bounds\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: new URLSearchParams({\n          top_left_x,\n          top_left_z,\n          bottom_right_x,\n          bottom_right_z\n        })\n      });\n      json = await res.json();\n      if (json.status !== \"ok\") throw new Error(\"Ошибка установки границ\");\n      alert(\"Карта обновлена!\");\n      setRefreshCounter(c => c + 1);\n    } catch (err) {\n      alert(\"Ошибка: \" + err.message);\n    }\n    setUploading(false);\n  }\n\n  // Новый обработчик формы для выбора лога\n  async function handleLogWatch(e) {\n    e.preventDefault();\n    setLogWatchLoading(true);\n    setLogWatchMsg(null);\n    try {\n      const res = await fetch(\"/log/watch\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          logFilePath\n        })\n      });\n      const json = await res.json();\n      if (json.status === \"ok\") {\n        setLogWatching(true);\n        setLogWatchMsg({\n          type: \"success\",\n          text: json.message || \"Слежение запущено\"\n        });\n      } else {\n        setLogWatching(false);\n        setLogWatchMsg({\n          type: \"error\",\n          text: json.message || \"Ошибка запуска слежения\"\n        });\n      }\n    } catch (err) {\n      setLogWatching(false);\n      setLogWatchMsg({\n        type: \"error\",\n        text: err.message\n      });\n    }\n    setLogWatchLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: \"70vh\",\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), cursorCoords && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      children: [\"\\u041A\\u043E\\u043E\\u0440\\u0434\\u0438\\u043D\\u0430\\u0442\\u044B Minecraft: X = \", cursorCoords.x, \", Z = \", cursorCoords.z]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      style: {\n        marginTop: 20,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u0443 \\u0438 \\u0443\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0433\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0412\\u0435\\u0440\\u0445\\u043D\\u0438\\u0439 \\u043B\\u0435\\u0432\\u044B\\u0439 X: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"top_left_x\",\n            step: \"0.1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0412\\u0435\\u0440\\u0445\\u043D\\u0438\\u0439 \\u043B\\u0435\\u0432\\u044B\\u0439 Z: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"top_left_z\",\n            step: \"0.1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041D\\u0438\\u0436\\u043D\\u0438\\u0439 \\u043F\\u0440\\u0430\\u0432\\u044B\\u0439 X: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"bottom_right_x\",\n            step: \"0.1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041D\\u0438\\u0436\\u043D\\u0438\\u0439 \\u043F\\u0440\\u0430\\u0432\\u044B\\u0439 Z: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"bottom_right_z\",\n            step: \"0.1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: uploading,\n        type: \"submit\",\n        children: uploading ? \"Загрузка...\" : \"Обновить карту\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogWatch,\n      style: {\n        marginTop: 30,\n        padding: 10,\n        borderTop: \"1px solid #ccc\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B \\u043B\\u043E\\u0433\\u043E\\u0432 \\u0434\\u043B\\u044F \\u0441\\u043B\\u0435\\u0436\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u041F\\u0443\\u0442\\u044C \\u043A \\u0444\\u0430\\u0439\\u043B\\u0443 \\u043B\\u043E\\u0433\\u043E\\u0432, \\u043D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 C:\\\\\\\\Users\\\\\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439\\\\\\\\.cristalix\\\\\\\\updates\\\\\\\\Minigames\\\\\\\\logs\\\\\\\\latest.log\",\n          value: logFilePath,\n          onChange: e => setLogFilePath(e.target.value),\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: logWatchLoading || !logFilePath.trim(),\n        type: \"submit\",\n        style: {\n          marginTop: 10\n        },\n        children: logWatchLoading ? \"Запуск...\" : \"Начать слежение\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this), logWatchMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10,\n          color: logWatchMsg.type === \"error\" ? \"red\" : \"green\"\n        },\n        children: logWatchMsg.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MapView, \"+0okz9VLr9nz1UEfkD8Ojt4C+qU=\");\n_c = MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useState","useRef","L","jsxDEV","_jsxDEV","Fragment","_Fragment","MapView","_s","mapRef","config","setConfig","players","setPlayers","playersRef","buildings","setBuildings","buildingsRef","ws","setWs","uploading","setUploading","cursorCoords","setCursorCoords","refreshCounter","setRefreshCounter","imgSize","setImgSize","width","height","logFilePath","setLogFilePath","logWatching","setLogWatching","logWatchMsg","setLogWatchMsg","logWatchLoading","setLogWatchLoading","PLAYER_TIMEOUT_MS","BUILDING_REMOVE_TIMEOUT_MS","DISTANCE_THRESHOLD","distance2D","x1","z1","x2","z2","dx","dz","Math","sqrt","groupNearbyPlayers","clusters","visited","Set","forEach","player","i","has","cluster","add","other","j","x","z","push","playerIcon","name","divIcon","className","html","iconSize","clusterIcon","count","buildingIcons","buildingIcon","buildingType","percent","borderColor","iconAnchor","mcToImageCoords","minX","min","top_left","bottom_right","maxX","max","minZ","maxZ","normX","normZ","px","py","imageCoordsToMC","toFixed","fetch","then","res","json","catch","console","error","imageUrl","img","Image","onload","naturalWidth","naturalHeight","src","current","off","remove","bounds","map","crs","CRS","Simple","minZoom","maxZoom","zoomControl","imageOverlay","addTo","fitBounds","close","socket","WebSocket","window","location","hostname","onopen","log","onmessage","event","data","JSON","parse","type","Number","lastSeen","Date","now","Object","entries","pos","key","coords","y","e","onclose","on","lat","lng","latlng","mcCoords","interval","setInterval","changed","clearInterval","keys","length","eachLayer","layer","Marker","removeLayer","marker","icon","bindPopup","p","join","values","handleUpload","preventDefault","form","target","file","files","top_left_x","value","top_left_z","bottom_right_x","bottom_right_z","alert","FormData","append","method","body","status","Error","headers","URLSearchParams","c","err","message","handleLogWatch","stringify","text","children","id","style","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","onSubmit","padding","accept","step","disabled","borderTop","placeholder","onChange","trim","color","_c","$RefreshReg$"],"sources":["C:/Users/Андрей/Work/Map/client/src/MapView.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport L from \"leaflet\";\r\n\r\nexport default function MapView() {\r\n  const mapRef = useRef(null);\r\n  const [config, setConfig] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const playersRef = useRef({});\r\n  const [buildings, setBuildings] = useState({});\r\n  const buildingsRef = useRef({});\r\n  const [ws, setWs] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [cursorCoords, setCursorCoords] = useState(null);\r\n  const [refreshCounter, setRefreshCounter] = useState(0);\r\n  const [imgSize, setImgSize] = useState({ width: 1280, height: 634 });\r\n  const [logFilePath, setLogFilePath] = useState(\"\");\r\n  const [logWatching, setLogWatching] = useState(false);\r\n  const [logWatchMsg, setLogWatchMsg] = useState(null);\r\n  const [logWatchLoading, setLogWatchLoading] = useState(false);\r\n  const PLAYER_TIMEOUT_MS = 10000;\r\n  const BUILDING_REMOVE_TIMEOUT_MS = 3 * 60 * 1000;\r\n  const DISTANCE_THRESHOLD = 15;\r\n\r\n  function distance2D(x1, z1, x2, z2) {\r\n    const dx = x1 - x2;\r\n    const dz = z1 - z2;\r\n    return Math.sqrt(dx * dx + dz * dz);\r\n  }\r\n\r\n  function groupNearbyPlayers(players) {\r\n    const clusters = [];\r\n    const visited = new Set();\r\n\r\n    players.forEach((player, i) => {\r\n      if (visited.has(i)) return;\r\n\r\n      const cluster = [player];\r\n      visited.add(i);\r\n\r\n      players.forEach((other, j) => {\r\n        if (i === j || visited.has(j)) return;\r\n        if (distance2D(player.x, player.z, other.x, other.z) <= DISTANCE_THRESHOLD) {\r\n          cluster.push(other);\r\n          visited.add(j);\r\n        }\r\n      });\r\n\r\n      clusters.push(cluster);\r\n    });\r\n\r\n    return clusters;\r\n  }\r\n\r\n  const playerIcon = (name) =>\r\n    L.divIcon({\r\n      className: \"player-icon\",\r\n      html: `<div style=\"\r\n        background-image:url('https://mc-heads.net/avatar/${name}/32');\r\n        width:32px; height:32px;\r\n        border-radius:50%;\r\n        border: 2px solid white;\r\n        background-size: cover;\r\n      \"></div>`,\r\n      iconSize: [32, 32],\r\n    });\r\n\r\n  const clusterIcon = (count) =>\r\n    L.divIcon({\r\n      className: \"player-cluster-icon\",\r\n      html: `<div style=\"\r\n        background-color: rgba(0, 0, 0, 0.7);\r\n        color: white;\r\n        font-weight: bold;\r\n        border-radius: 50%;\r\n        width: 32px;\r\n        height: 32px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        border: 2px solid white;\r\n        font-size: 14px;\r\n        user-select: none;\r\n      \">\r\n        +${count}\r\n      </div>`,\r\n      iconSize: [32, 32],\r\n    });\r\n\r\n  const buildingIcons = {\r\n    \"Башня лучников\": \"/icons/archerIcon.png\",\r\n    \"Башня пушкарей\": \"/icons/cannonIcon.png\",\r\n    \"Башня тесла\": \"/icons/teslaIcon.png\",\r\n    \"Корабль лучников\": \"/icons/archerShipIcon.png\",\r\n    \"Корабль пушкарей\": \"/icons/cannonShipIcon.png\",\r\n    \"Корабль тесла\": \"/icons/teslaShipIcon.png\",\r\n  };\r\n\r\n  function buildingIcon(buildingType, percent) {\r\n    let borderColor = \"black\";\r\n    if (percent >= 60) borderColor = \"green\";\r\n    else if (percent >= 20) borderColor = \"red\";\r\n\r\n    return L.divIcon({\r\n      className: \"building-icon\",\r\n      html: `<div style=\"\r\n        background-image: url('${buildingIcons[buildingType] || buildingIcons['Башня лучников']}');\r\n        width: 20px;\r\n        height: 20px;\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n        border: 3px solid ${borderColor};\r\n        border-radius: 6px;\r\n        box-sizing: border-box;\r\n      \"></div>`,\r\n      iconSize: [20, 20],\r\n      iconAnchor: [12, 12],\r\n    });\r\n  }\r\n\r\n  function mcToImageCoords(x, z) {\r\n    if (!config) return [0, 0];\r\n\r\n    const minX = Math.min(config.top_left[0], config.bottom_right[0]);\r\n    const maxX = Math.max(config.top_left[0], config.bottom_right[0]);\r\n    const minZ = Math.min(config.top_left[1], config.bottom_right[1]);\r\n    const maxZ = Math.max(config.top_left[1], config.bottom_right[1]);\r\n\r\n    const normX = (x - minX) / (maxX - minX);\r\n    const normZ = (z - minZ) / (maxZ - minZ);\r\n\r\n    const px = normX * imgSize.width;\r\n    const py = (1 - normZ) * imgSize.height;\r\n\r\n    return [px, py];\r\n  }\r\n\r\n  function imageCoordsToMC(px, py) {\r\n    if (!config) return null;\r\n\r\n    const minX = Math.min(config.top_left[0], config.bottom_right[0]);\r\n    const maxX = Math.max(config.top_left[0], config.bottom_right[0]);\r\n    const minZ = Math.min(config.top_left[1], config.bottom_right[1]);\r\n    const maxZ = Math.max(config.top_left[1], config.bottom_right[1]);\r\n\r\n    const normX = px / imgSize.width;\r\n    const normZ = 1 - py / imgSize.height;\r\n\r\n    const x = minX + normX * (maxX - minX);\r\n    const z = minZ + normZ * (maxZ - minZ);\r\n\r\n    return { x: x.toFixed(1), z: z.toFixed(1) };\r\n  }\r\n\r\n  // Загружаем конфиг карты и изображение, чтобы отрисовать\r\n  useEffect(() => {\r\n    fetch(\"/map/config\")\r\n      .then((res) => res.json())\r\n      .then(setConfig)\r\n      .catch(console.error);\r\n  }, [refreshCounter]);\r\n\r\n  useEffect(() => {\r\n    if (!config) return;\r\n\r\n    const imageUrl = `/maps/map.png?v=${refreshCounter}`;\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      setImgSize({ width: img.naturalWidth, height: img.naturalHeight });\r\n    };\r\n    img.src = imageUrl;\r\n  }, [config, refreshCounter]);\r\n\r\n  // Подключаем WebSocket, обновляем карту, очищаем при размонтировании\r\n  useEffect(() => {\r\n    if (!config || !imgSize.width || !imgSize.height) return;\r\n\r\n    if (mapRef.current) {\r\n      mapRef.current.off();\r\n      mapRef.current.remove();\r\n      mapRef.current = null;\r\n    }\r\n\r\n    const bounds = [\r\n      [0, 0],\r\n      [imgSize.height, imgSize.width],\r\n    ];\r\n\r\n    const map = L.map(\"map\", {\r\n      crs: L.CRS.Simple,\r\n      minZoom: -5,\r\n      maxZoom: 5,\r\n      zoomControl: true,\r\n    });\r\n\r\n    const imageUrl = `/maps/map.png?v=${refreshCounter}`;\r\n\r\n    L.imageOverlay(imageUrl, bounds).addTo(map);\r\n    map.fitBounds(bounds);\r\n\r\n    mapRef.current = map;\r\n\r\n    if (ws) {\r\n      ws.close();\r\n      setWs(null);\r\n    }\r\n\r\n    // Подключаем WS\r\n    const socket = new WebSocket(`ws://${window.location.hostname}:8000/ws`);\r\n\r\n    socket.onopen = () => {\r\n      console.log(\"WebSocket connected\");\r\n    };\r\n\r\n    socket.onmessage = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n\r\n        if (data.type === \"player_position\" && data.name) {\r\n          playersRef.current[data.name] = {\r\n            x: Number(data.x),\r\n            z: Number(data.z),\r\n            lastSeen: Date.now(),\r\n          };\r\n          setPlayers(\r\n            Object.entries(playersRef.current).map(([name, pos]) => ({\r\n              name,\r\n              x: Number(pos.x),\r\n              z: Number(pos.z),\r\n            }))\r\n          );\r\n        }\r\n\r\n        if (data.type === \"building_damage\") {\r\n          const key = `${data.coords.x}_${data.coords.y}_${data.coords.z}`;\r\n          buildingsRef.current[key] = {\r\n            buildingType: data.buildingType,\r\n            percent: data.percent,\r\n            coords: data.coords,\r\n            lastSeen: Date.now(),\r\n          };\r\n          setBuildings({ ...buildingsRef.current });\r\n        }\r\n\r\n        if (data.type === \"building_remove\") {\r\n          const key = `${data.coords.x}_${data.coords.y}_${data.coords.z}`;\r\n          delete buildingsRef.current[key];\r\n          setBuildings({ ...buildingsRef.current });\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    };\r\n\r\n    socket.onclose = () => {\r\n      console.log(\"WebSocket closed\");\r\n    };\r\n\r\n    map.on(\"mousemove\", (e) => {\r\n      if (!config) return;\r\n      const { lat, lng } = e.latlng;\r\n      const mcCoords = imageCoordsToMC(lng, lat);\r\n      if (mcCoords) {\r\n        setCursorCoords(mcCoords);\r\n      } else {\r\n        setCursorCoords(null);\r\n      }\r\n    });\r\n\r\n    setWs(socket);\r\n\r\n    return () => {\r\n      if (mapRef.current) {\r\n        mapRef.current.off();\r\n        mapRef.current.remove();\r\n        mapRef.current = null;\r\n      }\r\n      socket.close();\r\n    };\r\n  }, [config, refreshCounter, imgSize]);\r\n\r\n  // Таймаут для игроков\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const now = Date.now();\r\n      let changed = false;\r\n      Object.entries(playersRef.current).forEach(([name, pos]) => {\r\n        if (now - pos.lastSeen > PLAYER_TIMEOUT_MS) {\r\n          delete playersRef.current[name];\r\n          changed = true;\r\n        }\r\n      });\r\n      if (changed) {\r\n        setPlayers(\r\n          Object.entries(playersRef.current).map(([name, pos]) => ({\r\n            name,\r\n            x: Number(pos.x),\r\n            z: Number(pos.z),\r\n          }))\r\n        );\r\n      }\r\n    }, 2000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Таймаут для зданий\r\n  useEffect(() => {\r\n    if (!Object.keys(buildings).length) return;\r\n\r\n    const interval = setInterval(() => {\r\n      const now = Date.now();\r\n      let changed = false;\r\n      Object.entries(buildingsRef.current).forEach(([key, data]) => {\r\n        if (data.percent >= 60 && now - data.lastSeen > BUILDING_REMOVE_TIMEOUT_MS) {\r\n          delete buildingsRef.current[key];\r\n          changed = true;\r\n        }\r\n      });\r\n      if (changed) {\r\n        setBuildings({ ...buildingsRef.current });\r\n      }\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [buildings]);\r\n\r\n  // Обновляем маркеры игроков и зданий\r\n  useEffect(() => {\r\n    if (!mapRef.current) return;\r\n\r\n    mapRef.current.eachLayer((layer) => {\r\n      if (layer instanceof L.Marker) {\r\n        mapRef.current.removeLayer(layer);\r\n      }\r\n    });\r\n\r\n    const clusters = groupNearbyPlayers(players);\r\n\r\n    clusters.forEach((cluster) => {\r\n      const { x, z } = cluster[0];\r\n      const [px, py] = mcToImageCoords(x, z);\r\n\r\n      if (cluster.length === 1) {\r\n        const { name } = cluster[0];\r\n        L.marker([py, px], { icon: playerIcon(name) })\r\n          .addTo(mapRef.current)\r\n          .bindPopup(name);\r\n      } else {\r\n        L.marker([py, px], { icon: clusterIcon(cluster.length) })\r\n          .addTo(mapRef.current)\r\n          .bindPopup(cluster.map((p) => p.name).join(\", \"));\r\n      }\r\n    });\r\n\r\n    Object.values(buildings).forEach(({ buildingType, percent, coords }) => {\r\n      const [px, py] = mcToImageCoords(coords.x, coords.z);\r\n      L.marker([py, px], { icon: buildingIcon(buildingType, percent) })\r\n        .addTo(mapRef.current)\r\n        .bindPopup(`${buildingType} (${percent}%)`);\r\n    });\r\n  }, [players, buildings, config, imgSize]);\r\n\r\n  async function handleUpload(e) {\r\n    e.preventDefault();\r\n    setUploading(true);\r\n\r\n    const form = e.target;\r\n    const file = form.file.files[0];\r\n    const top_left_x = form.top_left_x.value;\r\n    const top_left_z = form.top_left_z.value;\r\n    const bottom_right_x = form.bottom_right_x.value;\r\n    const bottom_right_z = form.bottom_right_z.value;\r\n\r\n    if (!file || !top_left_x || !top_left_z || !bottom_right_x || !bottom_right_z) {\r\n      alert(\"Все поля должны быть заполнены\");\r\n      setUploading(false);\r\n      return;\r\n    }\r\n\r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n\r\n    try {\r\n      let res = await fetch(\"/map/upload\", {\r\n        method: \"POST\",\r\n        body: data,\r\n      });\r\n      let json = await res.json();\r\n      if (json.status !== \"ok\") throw new Error(\"Ошибка загрузки файла\");\r\n\r\n      res = await fetch(\"/map/set_bounds\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n        body: new URLSearchParams({\r\n          top_left_x,\r\n          top_left_z,\r\n          bottom_right_x,\r\n          bottom_right_z,\r\n        }),\r\n      });\r\n      json = await res.json();\r\n      if (json.status !== \"ok\") throw new Error(\"Ошибка установки границ\");\r\n\r\n      alert(\"Карта обновлена!\");\r\n      setRefreshCounter((c) => c + 1);\r\n    } catch (err) {\r\n      alert(\"Ошибка: \" + err.message);\r\n    }\r\n\r\n    setUploading(false);\r\n  }\r\n\r\n  // Новый обработчик формы для выбора лога\r\n  async function handleLogWatch(e) {\r\n    e.preventDefault();\r\n    setLogWatchLoading(true);\r\n    setLogWatchMsg(null);\r\n\r\n    try {\r\n      const res = await fetch(\"/log/watch\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ logFilePath }),\r\n      });\r\n      const json = await res.json();\r\n\r\n      if (json.status === \"ok\") {\r\n        setLogWatching(true);\r\n        setLogWatchMsg({ type: \"success\", text: json.message || \"Слежение запущено\" });\r\n      } else {\r\n        setLogWatching(false);\r\n        setLogWatchMsg({ type: \"error\", text: json.message || \"Ошибка запуска слежения\" });\r\n      }\r\n    } catch (err) {\r\n      setLogWatching(false);\r\n      setLogWatchMsg({ type: \"error\", text: err.message });\r\n    }\r\n\r\n    setLogWatchLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"map\" style={{ height: \"70vh\", width: \"100%\" }}></div>\r\n\r\n      {cursorCoords && (\r\n        <div style={{ marginTop: 10 }}>\r\n          Координаты Minecraft: X = {cursorCoords.x}, Z = {cursorCoords.z}\r\n        </div>\r\n      )}\r\n\r\n      {/* Форма загрузки карты */}\r\n      <form onSubmit={handleUpload} style={{ marginTop: 20, padding: 10 }}>\r\n        <h3>Загрузить карту и установить границы</h3>\r\n        <div>\r\n          <input type=\"file\" name=\"file\" accept=\"image/*\" />\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Верхний левый X: <input type=\"number\" name=\"top_left_x\" step=\"0.1\" />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Верхний левый Z: <input type=\"number\" name=\"top_left_z\" step=\"0.1\" />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Нижний правый X: <input type=\"number\" name=\"bottom_right_x\" step=\"0.1\" />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Нижний правый Z: <input type=\"number\" name=\"bottom_right_z\" step=\"0.1\" />\r\n          </label>\r\n        </div>\r\n        <button disabled={uploading} type=\"submit\">\r\n          {uploading ? \"Загрузка...\" : \"Обновить карту\"}\r\n        </button>\r\n      </form>\r\n      <form onSubmit={handleLogWatch} style={{ marginTop: 30, padding: 10, borderTop: \"1px solid #ccc\" }}>\r\n        <h3>Выбрать файл логов для слежения</h3>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Путь к файлу логов, например C:\\\\Users\\\\Андрей\\\\.cristalix\\\\updates\\\\Minigames\\\\logs\\\\latest.log\"\r\n            value={logFilePath}\r\n            onChange={(e) => setLogFilePath(e.target.value)}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </div>\r\n        <button disabled={logWatchLoading || !logFilePath.trim()} type=\"submit\" style={{ marginTop: 10 }}>\r\n          {logWatchLoading ? \"Запуск...\" : \"Начать слежение\"}\r\n        </button>\r\n        {logWatchMsg && (\r\n          <div style={{ marginTop: 10, color: logWatchMsg.type === \"error\" ? \"red\" : \"green\" }}>\r\n            {logWatchMsg.text}\r\n          </div>\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}